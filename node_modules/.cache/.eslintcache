[{"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/index.js":"1","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/reportWebVitals.js":"2","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/custom.js":"3","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Map/Map.js":"4","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/RadiusChange/index.js":"5","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Data/index.js":"6","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Variable/index.js":"7","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/firebaseConfig/firebase.js":"8","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Marker/index.js":"9","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/addPolygon.js":"10","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js":"11","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/index.js":"12","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/reportWebVitals.js":"13","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/custom.js":"14","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Map/Map.js":"15","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Data/index.js":"16","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Variable/index.js":"17","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/firebaseConfig/firebase.js":"18","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/index.js":"19","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/MarkerInf/index.js":"20","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/GeoJson/addPolygon.js":"21","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/GeoJson/mapPoly.js":"22","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/ChatBot/index.js":"23","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/MarkerRadius/index.js":"24","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/CustomMarkerMainCity.js":"25","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Loader/Loader.js":"26","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Data/category_img.js":"27"},{"size":573,"mtime":1675769704471,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1675443786270,"results":"30","hashOfConfig":"29"},{"size":882,"mtime":1675443786270,"results":"31","hashOfConfig":"29"},{"size":1761,"mtime":1675770075363,"results":"32","hashOfConfig":"29"},{"size":525,"mtime":1675443786270,"results":"33","hashOfConfig":"29"},{"size":2753,"mtime":1675758723425,"results":"34","hashOfConfig":"29"},{"size":360,"mtime":1675443786270,"results":"35","hashOfConfig":"29"},{"size":734,"mtime":1675443786270,"results":"36","hashOfConfig":"29"},{"size":2104,"mtime":1675799335571,"results":"37","hashOfConfig":"29"},{"size":1198,"mtime":1675797314108,"results":"38","hashOfConfig":"29"},{"size":1025,"mtime":1675799835719,"results":"39","hashOfConfig":"29"},{"size":709,"mtime":1729352917882,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1675443786270,"results":"42","hashOfConfig":"41"},{"size":935,"mtime":1728594884692,"results":"43","hashOfConfig":"41"},{"size":3349,"mtime":1728595022822,"results":"44","hashOfConfig":"41"},{"size":7899,"mtime":1729353101418,"results":"45","hashOfConfig":"41"},{"size":871,"mtime":1729975902746,"results":"46","hashOfConfig":"41"},{"size":734,"mtime":1675443786270,"results":"47","hashOfConfig":"41"},{"size":1300,"mtime":1729353008686,"results":"48","hashOfConfig":"41"},{"size":320,"mtime":1728594835102,"results":"49","hashOfConfig":"41"},{"size":1180,"mtime":1728594724976,"results":"50","hashOfConfig":"41"},{"size":1025,"mtime":1675799835719,"results":"51","hashOfConfig":"41"},{"size":2181,"mtime":1729352887414,"results":"52","hashOfConfig":"41"},{"size":267,"mtime":1728594861766,"results":"53","hashOfConfig":"41"},{"size":2281,"mtime":1728595020308,"results":"54","hashOfConfig":"41"},{"size":271,"mtime":1728834301822,"results":"55","hashOfConfig":"41"},{"size":1922,"mtime":1729293105593,"results":"56","hashOfConfig":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1hpb5qc",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},"1elu809",{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/index.js",["154"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { MyMap } from './Map/Map';\nimport reportWebVitals from './reportWebVitals';\nimport ChangeRadius from './RadiusChange';\nimport SearchForm from './custom';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst cityName=urlParams.get('location')\nroot.render(\n  <>\n  <MyMap cityName={cityName}></MyMap>\n    <SearchForm></SearchForm>\n  </>\n);\n\n\n\nreportWebVitals();\n",[],"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/reportWebVitals.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/custom.js",["155","156"],[],"import ChangeRadius from \"./RadiusChange\"\nimport { Data } from \"./Data\"\nimport React from \"react\"\n\n\nclass SearchForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      window.location.href=\"?location=\"+this.state.value\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form className=\"loop\" onSubmit={this.handleSubmit}>\n          <input className=\"inputSerach\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          <input className=\"buttonSearch\" type=\"submit\" value=\"\" />\n        </form>\n      );\n    }\n  }\n\nexport default SearchForm\n","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Map/Map.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/RadiusChange/index.js",["157"],[],"import { Data } from '../Data';\n\nfunction ChangeRadius(radius,cityName){\n    var array=[];\n    fetch(\"https://nominatim.openstreetmap.org/search?format=json&limit=3&q=\" + cityName)\n    .then(res => res.json())\n    .then(\n      (result) => {\n\n        //array=result;\n        return(\n            <Data items={result} radius={radius}></Data>\n        )\n    }\n    )\n    // if(array.length>0){\n    //     return(\n    //         <Data items={array} radius={radius}></Data>\n    //     )\n    // }\n    \n}\n\nexport default ChangeRadius;\n","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Data/index.js",["158","159"],[],"import React from 'react';\nimport StartFirebase from '../firebaseConfig/firebase';\nimport CustomMarker from '../Marker';\nimport MarkerInf from '../MarkerInf';\nimport {ref,onValue} from 'firebase/database'\nconst db = StartFirebase();\nexport class Data extends React.Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          items: this.props.items,\n          data:null,\n          radius:this.props.radius,\n          counter:0,\n          setArray:null\n\n        }\n      }\n      useEffect= () => {\n        for (let i = 1; i <= 3; i++) {\n          setTimeout(() => this.state.setArray((prevState) => [...prevState, i]), 3000 * i);\n        }\n      };\n      componentDidMount(){\n        const dbRef = ref(db,'/2/data');\n        onValue(dbRef,(snapshot)=>{\n            var records=[]\n            snapshot.forEach(childSnapshot=>{\n                let keyName=childSnapshot.key;\n                let data=childSnapshot.val();\n                if(this.getDistance([data.long_marker,data.lat],[this.state.items[0].lon,this.state.items[0].lat])<=this.state.radius && records.length<5){\n                    records.push({\"key\":keyName,\"data\":data})\n                }\n            })\n\n            records.forEach((element) => {\n                if(element.data.bc_ad==\"BC\"){\n                    element.data.complateYear = element.data.year * (-1)\n                }else{\n                    element.data.complateYear = element.data.year \n                }\n            })\n\n            records.sort(function(a,b){\n                return parseFloat(a.data.complateYear) - parseFloat(b.data.complateYear);\n            })\n\n            this.setState({\n                data: records\n            });\n        })\n    }\n\n\n    getDistance(origin, destination) {\n        var lon1 = this.toRadian(origin[1]),\n            lat1 = this.toRadian(origin[0]),\n            lon2 = this.toRadian(destination[1]),\n            lat2 = this.toRadian(destination[0]);\n    \n        var deltaLat = lat2 - lat1;\n        var deltaLon = lon2 - lon1;\n    \n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n        var c = 2 * Math.asin(Math.sqrt(a));\n        var EARTH_RADIUS = 6371;\n        return c * EARTH_RADIUS * 1000;\n    }\n    \n    toRadian(degree){\n        return degree*Math.PI/180\n    }\n    sleep(delay) {\n        var start = new Date().getTime();\n        while (new Date().getTime() < start + delay);\n    }\n\n    render() {\n\n        if (this.state.data == null) {\n            return 'Loading...';\n        }else{\n            return (\n                <CustomMarker things={this.state.data}></CustomMarker>\n              );\n        }\n    }\n}\n","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Variable/index.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/firebaseConfig/firebase.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/Marker/index.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],[],"import React , { useEffect, useState } from 'react';\nimport {Marker,Popup} from 'react-leaflet'\nimport { icon } from '../Variable';\nimport MarkerInf from '../MarkerInf';\nimport AddPolygon from '../GeoJson/addPolygon';\n\n\n\nexport default function CustomMarker(props){\n  const [renderedThings, setRenderThings] = useState();\n  const [itemsRendered , setItemsRendered] = useState(0);\n  const [show, setShow] = useState(false);\n\n\n  useEffect(() => {\n\n    for (let i in props.things) {\n      setTimeout(() => {\n        setRenderThings(props.things[i]);\n        setShow(true);\n      }, 5000 * i);\n    }\n\n  }, []);\n\n  if(show){\n    return(\n      <>\n      <Marker key={renderedThings.key} icon={icon(renderedThings.data.img_name)} position={[renderedThings.data.lat,renderedThings.data.long_marker]}>\n        <Popup>\n          <a className='description-name' href={renderedThings.data.wiki}>{renderedThings.data.marker_name}</a><br></br>\n          {renderedThings.data.text_wrap}<br></br>\n          <span className='description-date'>Date:</span> {dateFormater(renderedThings.data.date)} {renderedThings.data.bc_ad}\n        </Popup>\n      </Marker>\n      <MarkerInf markerName={renderedThings.data.marker_name} desc= {renderedThings.data.text_wrap} wiki={renderedThings.data.wiki} date ={dateFormater(renderedThings.data.date)} bc_ad = {renderedThings.data.bc_ad}></MarkerInf>\n      <AddPolygon yearMarker = {renderedThings.data.complateYear}></AddPolygon>\n      </>\n\n  )\n  }\n  \n}\n\nfunction dateFormater(date){\n  const words = date.split('/');\n  var mon=words[0]\n  var day=words[1]\n  var year=words[2]\n\n  if(mon = 1){\n    mon = \"Jan\"\n  }else if (mon = '2'){\n    mon = \"Feb\"\n  }else if (mon = '3'){\n    mon = \"Mar\"\n  }else if (mon = '4'){\n    mon = \"Apr\"\n  }else if (mon = '5'){\n    mon = \"May\"\n  }else if (mon = '6'){\n    mon = \"Jun\"\n  }else if (mon = '7'){\n    mon = \"Jul\"\n  }else if (mon = '8'){\n    mon = \"Avg\"\n  }else if (mon = '9'){\n    mon = \"Sep\"\n  }else if (mon = '10'){\n    mon = \"Oct\"\n  }else if (mon = '11'){\n    mon = \"Nov\"\n  }else if (mon = '12'){\n    mon=\"Dec\"\n  }\n  return mon+\" \"+day + \" \" +year\n}","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/addPolygon.js",["175","176","177"],[],"import { useEffect, useState } from \"react\";\nimport MapPoly from \"./mapPoly\";\n\nexport default function AddPolygon(props){\n    const [finalNumber,setFinalNumber] = useState();\n    const [yearForGeoJson,setYearForGeoJson]= useState([-1,-1000,-200,-2000,-323,-500,1000,117,1279,1492,1530,1650,1715,1783,1815,1830,1850,1861,1872,1880,1914,1920,1938,1939,1940,1941,1942,1943,1944,1945,1946,1994,2020,400,600,800])\n    const [isSet,setIsSet] = useState(false);\n\n    useEffect(() => {\n        let arrayYearJson=[];\n        let place;\n        yearForGeoJson.forEach(function(array) {\n            arrayYearJson.push(array);\n        })\n        arrayYearJson.push(props.yearMarker);\n        arrayYearJson.sort(function(a, b){return a-b});\n        arrayYearJson.forEach(function(array,index){\n            if(arrayYearJson[index]==props.yearMarker){\n                place=index;\n            }\n        })\n        var finalnumber=arrayYearJson[place-1];\n\n        setFinalNumber(finalnumber);\n        setIsSet(true);\n    \n    });\n\n    if(isSet){\n        return(\n            <>\n                <MapPoly finalNumber={finalNumber} idPoly = {props.yearMarker}></MapPoly>\n            </>\n        )\n    }\n    \n\n    \n}\n\n\n","/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js",["178"],[],"import { useEffect, useState } from \"react\";\nimport { GeoJSON } from \"react-leaflet\";\nexport default function MapPoly(props){\n    const [dataJson,setDataJson] = useState();\n    const [isSet,setIsSet] = useState(false);\n    const [numberTime,setNumberTime] = useState('');\n    function style(features) {\n        return {\n         \n          fillColor: features.properties.fill,\n          color: \"#000\",\n          weight:0.5,\n          dashArray: '0',\n          opacity: 0.4,\n          fillOpacity: 0.4\n        };\n    }\n\n    \n\n      useEffect(()=>{\n        const fetchData = (()=>{\n            let data = import('./json/world_'+props.finalNumber+'.json');\n            data.then(d=>{\n                setDataJson(d.features);\n                setIsSet(true);\n                setNumberTime(numberTime+1);\n            })\n        })\n        fetchData();\n        \n      },[props.finalNumber])\n        return(\n            <>\n            {isSet && <GeoJSON key={numberTime} data={dataJson} style ={style}/>}\n            </>\n        )\n}\n","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/index.js",["179"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { MyMap } from './Map/Map';\nimport reportWebVitals from './reportWebVitals';\nimport SearchForm from './custom';\nimport ChatBot from './ChatBot';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst cityName=urlParams.get('location')\nconst question = urlParams.get('question')\nroot.render(\n  <>\n  <MyMap cityName={cityName} question = {question}></MyMap>\n    <SearchForm></SearchForm>\n    {/* <ChatBot></ChatBot> */}\n  </>\n);\n\n\n\nreportWebVitals();\n","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/reportWebVitals.js",[],[],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/custom.js",["180"],[],"import React from \"react\"\n\n\nclass SearchForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      window.location.href=\"?location=\"+this.state.value\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form className=\"search\" onSubmit={this.handleSubmit}> \n          <div className=\"search-box\">\n          <input className=\"search-txt\" type=\"text\" name=\"\" value={this.state.value} onChange={this.handleChange} placeholder=\"Type to Search\"/>\n          <a className=\"search-btn\" >\n            <i className=\"fa fa-search\"></i>\n          </a>\n          </div>\n        </form>\n      );\n    }\n  }\n\nexport default SearchForm\n","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Map/Map.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Data/index.js",["181"],[],"import React from 'react';\nimport StartFirebase from '../firebaseConfig/firebase';\nimport CustomMarker from '../Marker';\nimport {ref,onValue} from 'firebase/database'\nimport CustomMarkerMainCity from '../Marker/CustomMarkerMainCity';\nimport Loader from '../Loader/Loader';\nimport { serverLink } from '../Variable';\nimport imagesByCategories from './category_img';\nconst db = StartFirebase();\nexport class Data extends React.Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          loading: false,\n          items: this.props.items,\n          data:null,\n          radius:this.props.radius,\n          counter:0,\n          setArray:null,\n          city:this.props.city,\n          question:this.props.question,\n          mainCity:false,\n          event:\"\",\n          imagesByCategories,\n          image_url:null,\n          stringImageCategories:\"\"\n        }\n      }\n\n      async componentDidMount(){\n        var city = (this.state.city).toLowerCase()\n        if(city === \"london\" || city === \"paris\" || city === \"new york\" || city === \"berlin\" ||  city === \"roma\"){\n          this.setState({\n            mainCity:true\n          })\n          this.callMyData();\n        \n        }else{\n          const timer = ms => new Promise(res => setTimeout(res, ms))\n          for(var i = 0 ; i <= 10 ; i++){\n            if(i===0){\n              this.callDataAI(true);\n              await timer(15000);\n            }else{\n              this.callDataAI();\n              await timer(15000);\n            }\n          }\n        }\n      }\n    \n    \n\n    async callDataAI(firstTime) {\n      let prompt;\n      this.setState({ loading: true, imagesByCategories:imagesByCategories });\n\n      var stringCategoryForImage= Object.keys(imagesByCategories).join(', ');\n      this.setState({stringImageCategories:stringCategoryForImage});\n\n      var string = JSON.stringify(this.state.imagesByCategories);\n\n      //console.log(stringCategoryForImage);\n      if (this.state.question) {\n          prompt = this.state.question + ' Format for answer JSON{\"event\":\"???\",\"description\":\"???\",\"date\":\"mm/dd/yyyy\",\"type\":\"\",\"longitude\":\"???\",\"latitude\":\"???\",\"imgCategory\":\"???\"}. Event should be location related ' + this.state.city + '. Return everything in json format in one line. Return events depending on the following categories: '+stringCategoryForImage+ ' and set the name of the category you chose in the imgCategory column.The category name must be exactly as given in the categories. Do not use slashes when returning an answer';\n          \n          if (!firstTime) {\n              prompt += ' Event not to be: ' + this.state.event + '.';\n          }\n      } else {\n          prompt = 'Give me interesting historical event for ' + this.state.city + ' in the following form {\"event\":\"???\",\"description\":\"???\",\"date\":\"mm/dd/yyyy\",\"type\":\"\",\"longitude\":\"???\",\"latitude\":\"???\",\"imgCategory\":\"???\"}. It is mandatory to put quotation marks on the keys in json. Send longitude and latitude as numbers without additional tags. Return everything in json format in one line. Return events depending on the following categories: '+stringCategoryForImage+ ' and set the name of the category you chose in the imgCategory column. The category name must be exactly as given in the categories. Do not use slashes when returning an answer';\n          \n          if (!firstTime) {\n              prompt = 'Give me a unique historical event for '+this.state.city+', excluding the following events: '+this.state.event+'. Return the information in the following format: {\"event\":\"???\",\"description\":\"???\",\"date\":\"mm/dd/yyyy\",\"type\":\"\",\"longitude\":???, \"latitude\":???,\"imgCategory\":\"????\"}.Return everything in json format in one line. Return events depending on the following categories: '+stringCategoryForImage+' and set the name of the category you chose in the imgCategory column. The category name must be exactly as given in the categories.Do not use slashes when returning an answer';\n          }\n        }\n  \n      const response = await fetch(serverLink + \"openAi\", {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ prompt })\n      });\n  \n      if (!response.ok) {\n          alert(\"Error fetching historical events\");\n          return;\n      }\n  \n      const data = await response.json();\n      const parsedData = data.response.trim();\n  \n      // const imageResponse = await fetch(serverLink + \"createImages\", {\n      //     method: \"POST\",\n      //     headers: {\n      //         'Content-Type': 'application/json',\n      //     },\n      //     body: JSON.stringify({\n      //         prompt: \"Generate an image of \" + JSON.parse(parsedData).event + \" with key figures and elements.\"\n      //     })\n      // });\n  \n      // if (!imageResponse.ok) {\n      //     alert(\"Error generating image\");\n      //     return;\n      // }\n  \n      // const imageData = await imageResponse.json();\n      // const imageUrl = imageData.bot;\n\n      var imageType = JSON.parse(parsedData).imgCategory;\n      var urlImage = \"https://mappinghistorybucket.s3.us-east-2.amazonaws.com/MappingHistoryMarker/\"+this.state.imagesByCategories[imageType][0];\n\n  \n      this.setState(prevState => ({\n          data: JSON.parse(parsedData),\n          event: firstTime ? JSON.parse(parsedData).event : prevState.event + \",\" + JSON.parse(parsedData).event,\n          image_url: urlImage,\n          loading: false\n        \n      }));\n  }\n  \n\n\n\n    async callMyData(){\n      const dbRef = ref(db,'/2/data');\n        onValue(dbRef,(snapshot)=>{\n            var records=[]\n            snapshot.forEach(childSnapshot=>{\n                let keyName=childSnapshot.key;\n                let data=childSnapshot.val();\n                if(this.getDistance([data.long_marker,data.lat],[this.state.items[0].lon,this.state.items[0].lat])<=this.state.radius && records.length<5){\n                    records.push({\"key\":keyName,\"data\":data})\n                }\n            })\n\n            records.forEach((element) => {\n                if(element.data.bc_ad===\"BC\"){\n                    element.data.complateYear = element.data.year * (-1)\n                }else{\n                    element.data.complateYear = element.data.year \n                }\n            })\n\n            records.sort(function(a,b){\n                return parseFloat(a.data.complateYear) - parseFloat(b.data.complateYear);\n            })\n\n            this.setState({\n                data: records\n            });\n          })\n    }\n  \n\n\n    getDistance(origin, destination) {\n        var lon1 = this.toRadian(origin[1]),\n            lat1 = this.toRadian(origin[0]),\n            lon2 = this.toRadian(destination[1]),\n            lat2 = this.toRadian(destination[0]);\n    \n        var deltaLat = lat2 - lat1;\n        var deltaLon = lon2 - lon1;\n    \n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n        var c = 2 * Math.asin(Math.sqrt(a));\n        var EARTH_RADIUS = 6371;\n        return c * EARTH_RADIUS * 1000;\n    }\n    \n    toRadian(degree){\n        return degree*Math.PI/180\n    }\n    sleep(delay) {\n        var start = new Date().getTime();\n        while (new Date().getTime() < start + delay);\n    }\n\n    render() {\n      //const { loading, data } = this.state;\n        \n        if (this.state.data == null) {\n            return <Loader></Loader>;\n        }else{\n          if(this.state.mainCity) {\n            return (\n              <CustomMarkerMainCity things={this.state.data} image_url={this.state.image_url}></CustomMarkerMainCity>\n            );\n          }else{\n            return (\n              <CustomMarker things={this.state.data} image_url={this.state.image_url}></CustomMarker>\n            );\n          }\n            \n        }\n    }\n}\n","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Variable/index.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/firebaseConfig/firebase.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/index.js",["182","183","184","185","186","187"],[],"import React , { useEffect, useState } from 'react';\nimport {Marker,Popup} from 'react-leaflet'\nimport { icon } from '../Variable';\nimport MarkerInf from '../MarkerInf';\nimport AddPolygon from '../GeoJson/addPolygon';\nimport { ICONRED,theRadius,ICONBLUE ,iconRandom} from '../Variable';\n\n\nexport default function CustomMarker(props){\n  const [renderedThings, setRenderThings] = useState();\n  const [itemsRendered , setItemsRendered] = useState(0);\n  const [show, setShow] = useState(false);\n  const [year,setYear] = useState();\n\n  useEffect(() => {\n    setRenderThings(props.things);\n    setYear(((props.things.date).split(\"/\"))[2])    \n    setShow(true);\n  },[props]);\n\n  if(show){\n    return(\n      <>\n      <Marker key={renderedThings.event} icon={iconRandom(props.image_url)} position={[renderedThings.latitude,renderedThings.longitude]}>\n        <Popup>\n        <span className='description-name' >{renderedThings.event}</span><br></br>\n          {renderedThings.description}<br></br>\n          <span className='description-date'>Date:</span>{renderedThings.date}\n        </Popup>\n      </Marker>\n      <MarkerInf markerName={renderedThings.event} desc= {renderedThings.description} date ={renderedThings.date}></MarkerInf>\n      <AddPolygon yearMarker = {year}></AddPolygon>\n      </>\n  )\n  }\n}","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/MarkerInf/index.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/GeoJson/addPolygon.js",["188","189"],[],"import { useEffect, useState } from \"react\";\nimport MapPoly from \"./mapPoly\";\n\nexport default function AddPolygon(props){\n    const [finalNumber,setFinalNumber] = useState();\n    const [yearForGeoJson]= useState([-1,-1000,-200,-2000,-323,-500,1000,117,1279,1492,1530,1650,1715,1783,1815,1830,1850,1861,1872,1880,1914,1920,1938,1939,1940,1941,1942,1943,1944,1945,1946,1994,2020,400,600,800])\n    const [isSet,setIsSet] = useState(false);\n\n    useEffect(() => {\n        let arrayYearJson=[];\n        let place;\n        yearForGeoJson.forEach(function(array) {\n            arrayYearJson.push(array);\n        })\n        arrayYearJson.push(props.yearMarker);\n        arrayYearJson.sort(function(a, b){return a-b});\n        arrayYearJson.forEach(function(array,index){\n            if(arrayYearJson[index]==props.yearMarker){\n                place=index;\n            }\n        })\n        var finalnumber=arrayYearJson[place-1];\n\n        setFinalNumber(finalnumber);\n        setIsSet(true);\n    \n    });\n\n    if(isSet){\n        return(\n            <>\n                <MapPoly finalNumber={finalNumber} idPoly = {props.yearMarker}></MapPoly>\n            </>\n        )\n    }\n    \n\n    \n}\n\n\n","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/GeoJson/mapPoly.js",["190"],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/ChatBot/index.js",["191"],[],"import React, { useEffect } from 'react';\nimport $ from \"jquery\"\nfunction ChatBot() {\n      \n      const chatStripe = (isAi,value,uniqueId) =>{\n        return(\n          `\n            <div class=\"wraooer ${isAi && 'ai'}\">\n              <div class=\"chat\">\n                <div class = \"profile\">\n                  <img\n                    src=\"${isAi ? \"bot.svg\" : \"user.svg\"}\"\n                    alt=\"${isAi? 'bot' : 'user'}\"\n                  />\n                </div>\n                <div class = \"message\" id=${uniqueId}>${value}</div>\n              </div>\n            </div>\n          `\n        )\n      }\n\n\n    const handleSubmit = async (e) =>{\n      const quest = document.getElementById(\"prompt\").value;\n      const location = document.getElementById(\"location\").value;\n      window.location.href=\"?location=\"+location +\"&question=\" + quest;\n      e.preventDefault();\n    }\n\n    const openChat = () =>{\n      const chatContainer = document.querySelector('#chat_container');\n\n\n        if($(\".chat-app\").hasClass(\"active\")){\n            $(\".chat-app\").removeClass(\"active\");\n            chatContainer.innerHTML=\"\";\n        }else{\n            $(\".chat-app\").addClass(\"active\");\n            chatContainer.innerHTML+=chatStripe(true,\"Hello, how may I help you?\",\"firstMessage\")\n        }\n    }\n\n    useEffect(()=>{\n        document.getElementById(\"prompt\").addEventListener('keyup', (e)=>{\n            if(e.keyCode ===13){\n              handleSubmit(e);\n            }\n          })\n    }) \n\n    return (\n            <div id=\"app\" className='chat-bot'>\n                <div className='chat-app'>\n                    {/* <div id=\"chat_container\"></div> */}\n                    <input name=\"location\" id=\"location\" placeholder='Location'></input>\n                    <textarea name=\"prompt\" id=\"prompt\" rows=\"1\" cols=\"1\" placeholder=\"Ask....\"></textarea>\n                    <button type=\"submit\" onClick={handleSubmit}><img src=\"send.svg\"></img></button>\n                </div>\n                <button id='message-button' onClick={openChat}>\n                    <i className=\"fa fa-commenting-o\"></i>\n                  </button>\n            </div>\n    );\n}\n\nexport default ChatBot;","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/MarkerRadius/index.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/CustomMarkerMainCity.js",["192","193","194","195","196","197","198","199","200","201","202","203"],[],"import React , { useEffect, useState} from 'react';\nimport {Marker,Popup} from 'react-leaflet'\nimport { icon } from '../Variable';\nimport MarkerInf from '../MarkerInf';\nimport AddPolygon from '../GeoJson/addPolygon';\nimport $ from \"jquery\"\n\nexport default function CustomMarkerMainCity(props){\n  const [renderedThings, setRenderThings] = useState();\n  const [show, setShow] = useState(false);\n  \n\n  useEffect(() => {\n\n    for (let i in props.things) {\n      setTimeout(() => {\n        setRenderThings(props.things[i]);\n        setShow(true);\n        \n      }, 5000 * i);\n    }\n    \n    $(\".leaflet-marker-pane :first-child\").hide();\n  }, [props]);\n\n  if(show){\n    \n    return(\n      <>\n      <Marker key={renderedThings.key} icon={icon(renderedThings.data.img_name)} position={[renderedThings.data.lat,renderedThings.data.long_marker]}>\n        <Popup>\n          <a className='description-name' href={renderedThings.data.wiki}>{renderedThings.data.marker_name}</a><br></br>\n          {renderedThings.data.text_wrap}<br></br>\n          <span className='description-date'>Date:</span> {dateFormater(renderedThings.data.date)} {renderedThings.data.bc_ad}\n        </Popup>\n      </Marker>\n      <MarkerInf markerName={renderedThings.data.marker_name} desc= {renderedThings.data.text_wrap} wiki={renderedThings.data.wiki} date ={dateFormater(renderedThings.data.date)} bc_ad = {renderedThings.data.bc_ad}></MarkerInf>\n      <AddPolygon yearMarker = {renderedThings.data.complateYear}></AddPolygon>\n      {/* <RecenterAutomatically  lat={renderedThings.data.lat} lng={renderedThings.data.long_marker}></RecenterAutomatically> */}\n      </>\n\n  )\n  }\n  \n}\n\nfunction dateFormater(date){\n  const words = date.split('/');\n  var mon=words[0]\n  var day=words[1]\n  var year=words[2]\n\n  if(mon = 1){\n    mon = \"Jan\"\n  }else if (mon = '2'){\n    mon = \"Feb\"\n  }else if (mon = '3'){\n    mon = \"Mar\"\n  }else if (mon = '4'){\n    mon = \"Apr\"\n  }else if (mon = '5'){\n    mon = \"May\"\n  }else if (mon = '6'){\n    mon = \"Jun\"\n  }else if (mon = '7'){\n    mon = \"Jul\"\n  }else if (mon = '8'){\n    mon = \"Avg\"\n  }else if (mon = '9'){\n    mon = \"Sep\"\n  }else if (mon = '10'){\n    mon = \"Oct\"\n  }else if (mon = '11'){\n    mon = \"Nov\"\n  }else if (mon = '12'){\n    mon=\"Dec\"\n  }\n  return mon+\" \"+day + \" \" +year\n}","/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Loader/Loader.js",[],[],"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Data/category_img.js",[],[],{"ruleId":"204","severity":1,"message":"205","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":1,"column":8,"nodeType":"206","messageId":"207","endLine":1,"endColumn":20},{"ruleId":"204","severity":1,"message":"208","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":14},{"ruleId":"204","severity":1,"message":"209","line":4,"column":9,"nodeType":"206","messageId":"207","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"210","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":39,"column":38,"nodeType":"213","messageId":"214","endLine":39,"endColumn":40},{"ruleId":"204","severity":1,"message":"215","line":11,"column":10,"nodeType":"206","messageId":"207","endLine":11,"endColumn":23},{"ruleId":"204","severity":1,"message":"216","line":11,"column":26,"nodeType":"206","messageId":"207","endLine":11,"endColumn":42},{"ruleId":"217","severity":1,"message":"218","line":24,"column":6,"nodeType":"219","endLine":24,"endColumn":8,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":51,"column":6,"nodeType":"223","messageId":"224","endLine":51,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":53,"column":13,"nodeType":"223","messageId":"224","endLine":53,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":55,"column":13,"nodeType":"223","messageId":"224","endLine":55,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":57,"column":13,"nodeType":"223","messageId":"224","endLine":57,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":59,"column":13,"nodeType":"223","messageId":"224","endLine":59,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":61,"column":13,"nodeType":"223","messageId":"224","endLine":61,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":63,"column":13,"nodeType":"223","messageId":"224","endLine":63,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":65,"column":13,"nodeType":"223","messageId":"224","endLine":65,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":67,"column":13,"nodeType":"223","messageId":"224","endLine":67,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":69,"column":13,"nodeType":"223","messageId":"224","endLine":69,"endColumn":23},{"ruleId":"221","severity":1,"message":"222","line":71,"column":13,"nodeType":"223","messageId":"224","endLine":71,"endColumn":23},{"ruleId":"221","severity":1,"message":"222","line":73,"column":13,"nodeType":"223","messageId":"224","endLine":73,"endColumn":23},{"ruleId":"204","severity":1,"message":"225","line":6,"column":27,"nodeType":"206","messageId":"207","endLine":6,"endColumn":44},{"ruleId":"217","severity":1,"message":"226","line":9,"column":5,"nodeType":"206","endLine":9,"endColumn":14,"suggestions":"227"},{"ruleId":"211","severity":1,"message":"212","line":18,"column":36,"nodeType":"213","messageId":"214","endLine":18,"endColumn":38},{"ruleId":"217","severity":1,"message":"228","line":32,"column":9,"nodeType":"219","endLine":32,"endColumn":28,"suggestions":"229"},{"ruleId":"204","severity":1,"message":"230","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":28,"column":11,"nodeType":"233","endLine":28,"endColumn":38},{"ruleId":"204","severity":1,"message":"234","line":63,"column":11,"nodeType":"206","messageId":"207","endLine":63,"endColumn":17},{"ruleId":"204","severity":1,"message":"235","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":14},{"ruleId":"204","severity":1,"message":"236","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":17},{"ruleId":"204","severity":1,"message":"237","line":6,"column":18,"nodeType":"206","messageId":"207","endLine":6,"endColumn":27},{"ruleId":"204","severity":1,"message":"238","line":6,"column":28,"nodeType":"206","messageId":"207","endLine":6,"endColumn":36},{"ruleId":"204","severity":1,"message":"215","line":11,"column":10,"nodeType":"206","messageId":"207","endLine":11,"endColumn":23},{"ruleId":"204","severity":1,"message":"216","line":11,"column":26,"nodeType":"206","messageId":"207","endLine":11,"endColumn":42},{"ruleId":"217","severity":1,"message":"226","line":9,"column":5,"nodeType":"206","endLine":9,"endColumn":14,"suggestions":"239"},{"ruleId":"211","severity":1,"message":"212","line":18,"column":36,"nodeType":"213","messageId":"214","endLine":18,"endColumn":38},{"ruleId":"217","severity":1,"message":"228","line":32,"column":9,"nodeType":"219","endLine":32,"endColumn":28,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":58,"column":66,"nodeType":"233","endLine":58,"endColumn":86},{"ruleId":"221","severity":1,"message":"222","line":53,"column":6,"nodeType":"223","messageId":"224","endLine":53,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":55,"column":13,"nodeType":"223","messageId":"224","endLine":55,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":57,"column":13,"nodeType":"223","messageId":"224","endLine":57,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":59,"column":13,"nodeType":"223","messageId":"224","endLine":59,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":61,"column":13,"nodeType":"223","messageId":"224","endLine":61,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":63,"column":13,"nodeType":"223","messageId":"224","endLine":63,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":65,"column":13,"nodeType":"223","messageId":"224","endLine":65,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":67,"column":13,"nodeType":"223","messageId":"224","endLine":67,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":69,"column":13,"nodeType":"223","messageId":"224","endLine":69,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":71,"column":13,"nodeType":"223","messageId":"224","endLine":71,"endColumn":23},{"ruleId":"221","severity":1,"message":"222","line":73,"column":13,"nodeType":"223","messageId":"224","endLine":73,"endColumn":23},{"ruleId":"221","severity":1,"message":"222","line":75,"column":13,"nodeType":"223","messageId":"224","endLine":75,"endColumn":23},"no-unused-vars","'ChangeRadius' is defined but never used.","Identifier","unusedVar","'Data' is defined but never used.","'array' is assigned a value but never used.","'MarkerInf' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'itemsRendered' is assigned a value but never used.","'setItemsRendered' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.things'. Either include it or remove the dependency array. If 'setRenderThings' needs the current value of 'props.things', you can also switch to useReducer instead of useState and read 'props.things' in the reducer.","ArrayExpression",["243"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'setYearForGeoJson' is assigned a value but never used.","React Hook useEffect contains a call to 'setFinalNumber'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [yearForGeoJson, props.yearMarker] as a second argument to the useEffect Hook.",["244"],"React Hook useEffect has a missing dependency: 'numberTime'. Either include it or remove the dependency array. You can also do a functional update 'setNumberTime(n => ...)' if you only need 'numberTime' in the 'setNumberTime' call.",["245"],"'ChatBot' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'string' is assigned a value but never used.","'icon' is defined but never used.","'ICONRED' is defined but never used.","'theRadius' is defined but never used.","'ICONBLUE' is defined but never used.",["246"],["247"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"250","fix":"254"},{"desc":"252","fix":"255"},"Update the dependencies array to be: [props.things]",{"range":"256","text":"257"},"Add dependencies array: [yearForGeoJson, props.yearMarker]",{"range":"258","text":"259"},"Update the dependencies array to be: [numberTime, props.finalNumber]",{"range":"260","text":"261"},{"range":"262","text":"259"},{"range":"263","text":"261"},[602,604],"[props.things]",[1011,1011],", [yearForGeoJson, props.yearMarker]",[863,882],"[numberTime, props.finalNumber]",[993,993],[863,882]]