{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // Aliases\n\n\nconst abs = Math.abs;\nconst float = parseFloat; // Values\n\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex'; // Data Attributes\n\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.firstCall = true;\n    this.isControlled = false;\n    this.externalInput = false;\n    this.isComponentMounted = false;\n    this.lastValueProp = [];\n  }\n\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n\n      this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n      this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n      this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0; // initial\n\n      this.reset(); // Add listeners to element\n\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      }); // Add listeners to range\n\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      }); // Define and add global listeners\n\n      this.pointerMoveEvent = e => {\n        this.drag(e);\n      };\n\n      this.pointerUpEvent = () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      };\n\n      this.resizeEvent = () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      };\n\n      this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.addNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = true;\n    }\n  }\n\n  componentDidUpdate() {\n    this.reset();\n  }\n\n  componentWillUnmount() {\n    // Remove global listeners\n    this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n    this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n    this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n    this.isComponentMounted = false;\n  }\n\n  reset() {\n    this.isControlled = !!this.props.value;\n\n    if (this.isControlled) {\n      if (this.firstCall || this.props.value !== this.lastValueProp) {\n        this.firstCall = false;\n        this.externalInput = true;\n      }\n\n      this.lastValueProp = this.props.value;\n    }\n\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n  }\n\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; // with options for pointer events\n\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  removeNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; // with options for pointer events\n\n    node.removeEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n\n\n  safeMinMaxValues() {\n    let error = false;\n\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  } // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n\n\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    } // Boolean Values\n\n\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  } // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n\n\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true; // Current value as set in the input elements\n    // which could change while changing min, max and step values\n\n    const currentValue = this.setMinMaxProps(this.input[0].current.value, this.input[1].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n    newValue = newValue || currentValue;\n    this.input[this.index.min].current.value = newValue.min;\n    this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues(); // Check if the thumbs cross each other\n\n    if (this.value.min > this.value.max) {\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max; // Switch thumb attributes\n\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n\n      this.syncValues();\n    }\n\n    this.sliderValue = forceSet ? this.value : newValue;\n    let valueSet = false;\n\n    if (currentValue.min !== this.input[0].current.value || forceSet) {\n      valueSet = true;\n    }\n\n    if (currentValue.max !== this.input[1].current.value || forceSet) {\n      valueSet = true;\n    } // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n\n\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n\n      if (!this.isControlled || this.externalInput) {\n        this.externalInput = false;\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n        this.updateAriaValueAttributes();\n      }\n    }\n  } // Sync var value with the input elements\n\n\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].current.value;\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateRange() {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  } // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n\n\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n\n\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  } // Called when,\n  // -> disabled property is modified\n\n\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  } // Called when,\n  // -> thumbsDisabled property is modified\n\n\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  } // Called when,\n  // -> min or max values are modified\n\n\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0].current[_] = this.options[_];\n      this.input[1].current[_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  } // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n\n\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  } // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n\n\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).height);\n    });\n  } // thumb position calculation depending upon the pointer position\n\n\n  currentPosition(e, node) {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const nodeBounds = node.getBoundingClientRect();\n    const currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n\n    return currPos;\n  }\n\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n\n  elementFocused(e) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let setFocus = false;\n\n    if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    } // No action if both thumbs are disabled\n\n\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n      }\n\n      if (repeat) {\n        this.elementFocused(e, false);\n      }\n    }\n  }\n\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n\n  initiateThumbDrag(e, i, node) {\n    let callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n\n      if (callback && this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n\n  drag(e) {\n    if (this.isDragging) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        } // When max thumb reaches lower limit\n\n\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        } // When range / min thumb reaches lower limit\n\n\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n\n          this.startPos = lastPos;\n        } // When range / max thumb reaches upper limit\n\n\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n\n          this.startPos = lastPos;\n        }\n      }\n\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n\n  actualStepValue() {\n    const step = float(this.input[0].current.step);\n    return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  } // Step value (up or down) using arrow keys\n\n\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      } // When max thumb reaches lower limit\n\n\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n\n  render() {\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[0],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[1],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n\n}\n\n;\nvar _default = RangeSlider;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_react","_interopRequireWildcard","require","_clsx","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","abs","Math","float","parseFloat","MIN","MAX","ANY","VERTICAL","TABINDEX","DATA_LOWER","DATA_UPPER","DATA_ACTIVE","DATA_VERTICAL","DATA_DISABLED","RangeSlider","PureComponent","constructor","element","createRef","input","thumb","range","options","firstCall","isControlled","externalInput","isComponentMounted","lastValueProp","componentDidMount","setMinMaxProps","index","thumbWidth","thumbHeight","rangeLimits","sliderValue","maxRangeWidth","rangeWidth","isDragging","thumbDrag","startPos","reset","addNodeEventListener","current","e","elementFocused","forEach","t","i","initiateThumbDrag","which","preventDefault","stepValue","initiateRangeDrag","pointerMoveEvent","drag","pointerUpEvent","removeNodeAttribute","onThumbDragEnd","onRangeDragEnd","resizeEvent","syncThumbDimensions","updateThumbs","updateRange","document","window","componentDidUpdate","componentWillUnmount","removeNodeEventListener","props","max","min","updateOrientation","setValue","updateRangeLimits","updateDisabledState","updateThumbsDisabledState","updateTabIndexes","isNumber","n","isNaN","arguments","length","undefined","iterateMinMaxProps","fn","getSetProps","condition","expression","setNodeAttribute","node","attribute","setAttribute","removeAttribute","event","isPointerEvent","addEventListener","passive","capture","removeEventListener","fallbackToDefault","property","defaultValue","ifVerticalElse","vertical","horizontal","orientation","currentIndex","safeMinMaxValues","error","safeThumbsDisabledValues","thumbsDisabled","Array","push","newValue","forceSet","callback","currentValue","syncValues","valueSet","onInput","updateAriaValueAttributes","_","style","concat","elementBounds","getBoundingClientRect","deltaOffset","bottom","top","right","left","deltaDimension","disabled","d","currIndex","updateLimits","limit","m","getComputedStyle","width","height","currentPosition","nodeBounds","currPos","doesntHaveClassName","className","target","classList","contains","repeat","setFocus","rangeSlideDisabled","deltaMin","deltaMax","nearestThumbIndex","initiateDrag","onThumbDragStart","onRangeDragStart","lastPos","delta","lower","upper","actualStepValue","step","direction","render","createElement","id","ref","type","onChange","role","_default"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/node_modules/react-range-slider-input/dist/components/RangeSlider.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.parse-float.js\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// Aliases\nconst abs = Math.abs;\nconst float = parseFloat; // Values\n\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex'; // Data Attributes\n\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.firstCall = true;\n    this.isControlled = false;\n    this.externalInput = false;\n    this.isComponentMounted = false;\n    this.lastValueProp = [];\n  }\n\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n\n      this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n      this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n      this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0; // initial\n\n      this.reset(); // Add listeners to element\n\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      }); // Add listeners to range\n\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      }); // Define and add global listeners\n\n      this.pointerMoveEvent = e => {\n        this.drag(e);\n      };\n\n      this.pointerUpEvent = () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      };\n\n      this.resizeEvent = () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      };\n\n      this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.addNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = true;\n    }\n  }\n\n  componentDidUpdate() {\n    this.reset();\n  }\n\n  componentWillUnmount() {\n    // Remove global listeners\n    this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n    this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n    this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n    this.isComponentMounted = false;\n  }\n\n  reset() {\n    this.isControlled = !!this.props.value;\n\n    if (this.isControlled) {\n      if (this.firstCall || this.props.value !== this.lastValueProp) {\n        this.firstCall = false;\n        this.externalInput = true;\n      }\n\n      this.lastValueProp = this.props.value;\n    }\n\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n  }\n\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  removeNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.removeEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n\n\n  safeMinMaxValues() {\n    let error = false;\n\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  } // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n\n\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    } // Boolean Values\n\n\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  } // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n\n\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Current value as set in the input elements\n    // which could change while changing min, max and step values\n    const currentValue = this.setMinMaxProps(this.input[0].current.value, this.input[1].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n    newValue = newValue || currentValue;\n    this.input[this.index.min].current.value = newValue.min;\n    this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues(); // Check if the thumbs cross each other\n\n    if (this.value.min > this.value.max) {\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max; // Switch thumb attributes\n\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n\n      this.syncValues();\n    }\n\n    this.sliderValue = forceSet ? this.value : newValue;\n    let valueSet = false;\n\n    if (currentValue.min !== this.input[0].current.value || forceSet) {\n      valueSet = true;\n    }\n\n    if (currentValue.max !== this.input[1].current.value || forceSet) {\n      valueSet = true;\n    } // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n\n\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n\n      if (!this.isControlled || this.externalInput) {\n        this.externalInput = false;\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n        this.updateAriaValueAttributes();\n      }\n    }\n  } // Sync var value with the input elements\n\n\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].current.value;\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateRange() {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  } // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n\n\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n\n\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  } // Called when,\n  // -> disabled property is modified\n\n\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  } // Called when,\n  // -> thumbsDisabled property is modified\n\n\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  } // Called when,\n  // -> min or max values are modified\n\n\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0].current[_] = this.options[_];\n      this.input[1].current[_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  } // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n\n\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  } // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n\n\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).height);\n    });\n  } // thumb position calculation depending upon the pointer position\n\n\n  currentPosition(e, node) {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const nodeBounds = node.getBoundingClientRect();\n    const currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n\n    return currPos;\n  }\n\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n\n  elementFocused(e) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let setFocus = false;\n\n    if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    } // No action if both thumbs are disabled\n\n\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n      }\n\n      if (repeat) {\n        this.elementFocused(e, false);\n      }\n    }\n  }\n\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n\n  initiateThumbDrag(e, i, node) {\n    let callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n\n      if (callback && this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n\n  drag(e) {\n    if (this.isDragging) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        } // When max thumb reaches lower limit\n\n\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        } // When range / min thumb reaches lower limit\n\n\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n\n          this.startPos = lastPos;\n        } // When range / max thumb reaches upper limit\n\n\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n\n          this.startPos = lastPos;\n        }\n      }\n\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n\n  actualStepValue() {\n    const step = float(this.input[0].current.step);\n    return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  } // Step value (up or down) using arrow keys\n\n\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      } // When max thumb reaches lower limit\n\n\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n\n  render() {\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[0],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[1],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n\n}\n\n;\nvar _default = RangeSlider;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}