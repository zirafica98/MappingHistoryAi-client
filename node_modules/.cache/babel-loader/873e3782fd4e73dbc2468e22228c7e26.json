{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GeoJSON } from 'react-leaflet'; //import geoJson from './json/world_-1.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapPoly(props) {\n  _s();\n\n  const [dataJson, setDataJson] = useState();\n  const [isSet, setIsSet] = useState(false); //var geoJsonData = geoJson.features;\n\n  const getData = () => {\n    fetch('./json/world_-1.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJson) {\n      console.log(myJson);\n    });\n  };\n\n  useEffect(() => {\n    //getData()\n    let data = require('./json/world_-1.json');\n\n    setDataJson(data);\n    setIsSet(true);\n  }, []); // let data = require('./json/world_-1.json');\n  // setDataJson(data);\n  // console.log(data);\n  //     const [data, setData] = useState()\n  // const fetchJson = () => {\n  //   fetch('./json/world_-1.geojson')\n  //   .then(response => {\n  //     return response.text();\n  //   }).then(data => {\n  //     setData(data);\n  //   }).catch((e) => {\n  //     console.log(e.message);\n  //   });\n  // }\n  // useEffect(() => {\n  //   fetchJson()\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: dataJson\n    }, 'my-geojson', false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapPoly, \"QmcPSa+wltNOS8cel3wqj3Zyw5Q=\");\n\n_c = MapPoly;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPoly\");","map":{"version":3,"names":["useEffect","useState","GeoJSON","MapPoly","props","dataJson","setDataJson","isSet","setIsSet","getData","fetch","headers","then","response","console","log","json","myJson","data","require"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {GeoJSON} from 'react-leaflet'\n//import geoJson from './json/world_-1.json';\nexport default function MapPoly(props){\n    const [dataJson,setDataJson] = useState();\n    const [isSet,setIsSet] = useState(false)\n\n    //var geoJsonData = geoJson.features;\n\n    const getData=()=>{\n        fetch('./json/world_-1.json'\n        ,{\n          headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n           }\n        }\n        )\n          .then(function(response){\n            console.log(response)\n            return response.json();\n          })\n          .then(function(myJson) {\n            console.log(myJson);\n          });\n      }\n      useEffect(()=>{\n        //getData()\n        let data = require('./json/world_-1.json');\n        setDataJson(data);\n        setIsSet(true);\n      },[])\n    // let data = require('./json/world_-1.json');\n    // setDataJson(data);\n    // console.log(data);\n\n\n//     const [data, setData] = useState()\n// const fetchJson = () => {\n//   fetch('./json/world_-1.geojson')\n//   .then(response => {\n//     return response.text();\n//   }).then(data => {\n//     setData(data);\n//   }).catch((e) => {\n//     console.log(e.message);\n//   });\n// }\n// useEffect(() => {\n//   fetchJson()\n// },[])\n\n\n    return(\n        <>\n        <GeoJSON key='my-geojson' data={dataJson} />\n        </>\n    )\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,OAAR,QAAsB,eAAtB,C,CACA;;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;EAAA;;EAClC,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,EAAvC;EACA,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC,CAFkC,CAIlC;;EAEA,MAAMQ,OAAO,GAAC,MAAI;IACdC,KAAK,CAAC,sBAAD,EACJ;MACCC,OAAO,EAAG;QACR,gBAAgB,kBADR;QAER,UAAU;MAFF;IADX,CADI,CAAL,CAQGC,IARH,CAQQ,UAASC,QAAT,EAAkB;MACtBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACA,OAAOA,QAAQ,CAACG,IAAT,EAAP;IACD,CAXH,EAYGJ,IAZH,CAYQ,UAASK,MAAT,EAAiB;MACrBH,OAAO,CAACC,GAAR,CAAYE,MAAZ;IACD,CAdH;EAeD,CAhBH;;EAiBEjB,SAAS,CAAC,MAAI;IACZ;IACA,IAAIkB,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;IACAb,WAAW,CAACY,IAAD,CAAX;IACAV,QAAQ,CAAC,IAAD,CAAR;EACD,CALQ,EAKP,EALO,CAAT,CAvBgC,CA6BlC;EACA;EACA;EAGJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGI,oBACI;IAAA,uBACA,QAAC,OAAD;MAA0B,IAAI,EAAEH;IAAhC,GAAa,YAAb;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAKH;;GAvDuBF,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}