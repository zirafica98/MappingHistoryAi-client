{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport { icon } from '../Variable';\nimport MarkerInf from '../MarkerInf';\nimport AddPolygon from '../GeoJson/addPolygon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CustomMarker(props) {\n  _s();\n\n  const [renderedThings, setRenderThings] = useState();\n  const [itemsRendered, setItemsRendered] = useState(0);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    for (let i in props.things) {\n      setTimeout(() => {\n        setRenderThings(props.things[i]);\n        setShow(true);\n      }, 5000 * i);\n    }\n  }, []);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: [renderedThings.Coordinates],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description-name\",\n            children: renderedThings.Event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 74\n          }, this), renderedThings.Description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description-date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this), renderedThings.Date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, renderedThings.Event, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(CustomMarker, \"wQ57osYuIeIkIgheoVAOn/tRh70=\");\n\n_c = CustomMarker;\n\nfunction dateFormater(date) {\n  const words = date.split('/');\n  var mon = words[0];\n  var day = words[1];\n  var year = words[2];\n\n  if (mon = 1) {\n    mon = \"Jan\";\n  } else if (mon = '2') {\n    mon = \"Feb\";\n  } else if (mon = '3') {\n    mon = \"Mar\";\n  } else if (mon = '4') {\n    mon = \"Apr\";\n  } else if (mon = '5') {\n    mon = \"May\";\n  } else if (mon = '6') {\n    mon = \"Jun\";\n  } else if (mon = '7') {\n    mon = \"Jul\";\n  } else if (mon = '8') {\n    mon = \"Avg\";\n  } else if (mon = '9') {\n    mon = \"Sep\";\n  } else if (mon = '10') {\n    mon = \"Oct\";\n  } else if (mon = '11') {\n    mon = \"Nov\";\n  } else if (mon = '12') {\n    mon = \"Dec\";\n  }\n\n  return mon + \" \" + day + \" \" + year;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomMarker\");","map":{"version":3,"names":["React","useEffect","useState","Marker","Popup","icon","MarkerInf","AddPolygon","CustomMarker","props","renderedThings","setRenderThings","itemsRendered","setItemsRendered","show","setShow","i","things","setTimeout","Coordinates","Event","Description","Date","dateFormater","date","words","split","mon","day","year"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/index.js"],"sourcesContent":["import React , { useEffect, useState } from 'react';\nimport {Marker,Popup} from 'react-leaflet'\nimport { icon } from '../Variable';\nimport MarkerInf from '../MarkerInf';\nimport AddPolygon from '../GeoJson/addPolygon';\n\n\n\nexport default function CustomMarker(props){\n  const [renderedThings, setRenderThings] = useState();\n  const [itemsRendered , setItemsRendered] = useState(0);\n  const [show, setShow] = useState(false);\n\n\n  useEffect(() => {\n\n    for (let i in props.things) {\n      setTimeout(() => {\n        setRenderThings(props.things[i]);\n        setShow(true);\n      }, 5000 * i);\n    }\n\n  }, []);\n\n  if(show){\n    return(\n      <>\n      <Marker key={renderedThings.Event} position={[renderedThings.Coordinates]}>\n        <Popup>\n        <span className='description-name' >{renderedThings.Event}</span><br></br>\n          {renderedThings.Description}<br></br>\n          <span className='description-date'>Date:</span>{renderedThings.Date}\n        </Popup>\n      </Marker>\n      {/* <MarkerInf markerName={renderedThings.event} desc= {renderedThings.description} date ={dateFormater(renderedThings.data.date)} bc_ad = {renderedThings.data.bc_ad}></MarkerInf> */}\n      {/* <AddPolygon yearMarker = {renderedThings.data.complateYear}></AddPolygon> */}\n      </>\n\n  )\n  }\n  \n}\n\nfunction dateFormater(date){\n  const words = date.split('/');\n  var mon=words[0]\n  var day=words[1]\n  var year=words[2]\n\n  if(mon = 1){\n    mon = \"Jan\"\n  }else if (mon = '2'){\n    mon = \"Feb\"\n  }else if (mon = '3'){\n    mon = \"Mar\"\n  }else if (mon = '4'){\n    mon = \"Apr\"\n  }else if (mon = '5'){\n    mon = \"May\"\n  }else if (mon = '6'){\n    mon = \"Jun\"\n  }else if (mon = '7'){\n    mon = \"Jul\"\n  }else if (mon = '8'){\n    mon = \"Avg\"\n  }else if (mon = '9'){\n    mon = \"Sep\"\n  }else if (mon = '10'){\n    mon = \"Oct\"\n  }else if (mon = '11'){\n    mon = \"Nov\"\n  }else if (mon = '12'){\n    mon=\"Dec\"\n  }\n  return mon+\" \"+day + \" \" +year\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}