{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Map/Map.js\";\nimport './Map.css';\nimport { MapContainer, TileLayer, Marker, Circle } from 'react-leaflet';\nimport \"leaflet/dist/images/marker-shadow.png\";\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css';\nimport React from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-geosearch/dist/geosearch.css\";\nimport { Data } from '../Data';\nimport { ICONRED, theRadius } from '../Variable';\nimport ChatBot from '../ChatBot';\nimport MarkerRadius from '../MarkerRadius';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MyMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lan: props.lan,\n      lon: props.lon,\n      cityName: props.cityName,\n      items: [],\n      kilometers: 1\n    };\n  } // const [kilometers,setKilometers] = useState(1);\n\n\n  changeKilometers(event) {\n    const slideValue = document.getElementsByClassName(\"kilometersValue\");\n    const inputSlider = document.getElementsByClassName(\"inputValue\");\n\n    inputSlider.oninput = () => {\n      let value = inputSlider.value;\n      slideValue.textContent = value;\n      slideValue.style.left = value / 2 + \"%\";\n      slideValue.classList.add(\"show\");\n    };\n\n    inputSlider.onblur = () => {\n      slideValue.classList.remove(\"show\");\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://nominatim.openstreetmap.org/search?format=json&limit=3&q=\" + this.state.cityName).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    if (this.state.items.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [this.state.items[0].lat, this.state.items[0].lon],\n          zoom: 14,\n          style: {\n            height: \"100vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://api.maptiler.com/maps/voyager/256/{z}/{x}/{y}.png?key=tbxxnHOYRKXeGzScTE2D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MarkerRadius, {\n            center: [this.state.items[0].lat, this.state.items[0].lon],\n            radius: this.state.kilometers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-operations\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sliderValue\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"kilometersValue\",\n                children: this.state.kilometers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value left\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                className: \"inputValue\",\n                onChange: event => {\n                  this.setState({\n                    kilometers: event.target.value\n                  });\n                  $(\".kilometersValue\").addClass(\"show\");\n                },\n                min: \"0\",\n                max: \"20000\",\n                value: this.state.kilometers,\n                steps: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value right\",\n                children: \"20000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    } else {\n      return \"\";\n    }\n  }\n\n}","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Circle","React","Data","ICONRED","theRadius","ChatBot","MarkerRadius","MyMap","Component","constructor","props","state","lan","lon","cityName","items","kilometers","changeKilometers","event","slideValue","document","getElementsByClassName","inputSlider","oninput","value","textContent","style","left","classList","add","onblur","remove","componentDidMount","fetch","then","res","json","result","setState","isLoaded","error","render","length","lat","height","target","$","addClass"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Map/Map.js"],"sourcesContent":["import './Map.css';\nimport { MapContainer, TileLayer,Marker,Circle} from 'react-leaflet'\nimport \"leaflet/dist/images/marker-shadow.png\";\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css';\nimport React from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-geosearch/dist/geosearch.css\";\nimport { Data } from '../Data';\nimport { ICONRED,theRadius } from '../Variable';\nimport ChatBot from '../ChatBot';\nimport MarkerRadius from '../MarkerRadius';\n\nexport class MyMap extends React.Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        lan: props.lan,\n        lon:props.lon,\n        cityName:props.cityName,\n        items:[],\n        kilometers:1\n      }\n  }\n  // const [kilometers,setKilometers] = useState(1);\n  changeKilometers (event){\n    const slideValue = document.getElementsByClassName(\"kilometersValue\");\n    const inputSlider = document.getElementsByClassName(\"inputValue\");\n    inputSlider.oninput = (()=>{\n      let value = inputSlider.value;\n      slideValue.textContent = value;\n      slideValue.style.left = (value/2) + \"%\";\n      slideValue.classList.add(\"show\");\n\n    });\n    inputSlider.onblur = (()=>{\n      slideValue.classList.remove(\"show\");\n    });\n\n    \n  };\n\n  componentDidMount(){\n    fetch(\"https://nominatim.openstreetmap.org/search?format=json&limit=3&q=\" + this.state.cityName)\n    .then(res => res.json())\n    .then(\n      (result) => {\n       \n        this.setState({\n          isLoaded: true,\n          items: result\n        });\n\n    },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n\n  render() {\n    \n      if (this.state.items.length>0){\n        return (\n          <div>\n          <MapContainer center={[this.state.items[0].lat,this.state.items[0].lon]} zoom={14} style={{height: \"100vh\"}}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://api.maptiler.com/maps/voyager/256/{z}/{x}/{y}.png?key=tbxxnHOYRKXeGzScTE2D\" />\n              {/* <Marker icon={ICONRED} position={[this.state.items[0].lat,this.state.items[0].lon]}></Marker> */}\n            {/* <Data items={this.state.items} city={this.state.cityName} radius={theRadius} ></Data> */}\n            <MarkerRadius center={[this.state.items[0].lat,this.state.items[0].lon]} radius= {this.state.kilometers}></MarkerRadius>\n            </MapContainer>\n            <div className=\"range-operations\">\n                {/* <span>Range: {this.state.kilometers}</span>\n                <input\n                    type='range'\n                    min={1}\n                    onChange={(event) => this.setState({ kilometers: event.target.value})}\n                    max={10000}\n                    step={1}\n                    orient=\"vertical\" \n                    value={this.state.kilometers}\n                    className='custom-slider'>\n                </input> */}\n                <div className=\"range\">\n                <div className=\"sliderValue\">\n                  <span className='kilometersValue'>{this.state.kilometers}</span>\n                </div>\n                <div className=\"field\">\n                  <div className=\"value left\">0</div>\n                  <input type=\"range\" className='inputValue' onChange={(event) => {this.setState({ kilometers: event.target.value}); $(\".kilometersValue\").addClass(\"show\")}} min=\"0\" max=\"20000\" value={this.state.kilometers} steps=\"1\"/>\n                  <div className=\"value right\">20000</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        )\n      }else{\n        return \"\";\n      }\n      \n    \n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}