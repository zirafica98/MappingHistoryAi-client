{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GeoJSON } from 'react-leaflet'; //import geoJson from './json/world_-500.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapPoly(props) {\n  _s();\n\n  const [dataJson, setDataJson] = useState();\n  const [isSet, setIsSet] = useState(false); // let data = require('./json/world_'+props.finalNumber+'.json');\n\n  useEffect(() => {\n    let data = import('./json/world_' + props.finalNumber + '.json');\n    data.then(d => {\n      setDataJson(data);\n      setIsSet(true);\n    });\n  }, []);\n\n  if (isSet) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: dataJson\n      }, 'my-geojson', false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(MapPoly, \"QmcPSa+wltNOS8cel3wqj3Zyw5Q=\");\n\n_c = MapPoly;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPoly\");","map":{"version":3,"names":["useEffect","useState","GeoJSON","MapPoly","props","dataJson","setDataJson","isSet","setIsSet","data","finalNumber","then","d"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {GeoJSON} from 'react-leaflet'\n//import geoJson from './json/world_-500.json';\nexport default function MapPoly(props){\n    const [dataJson,setDataJson] = useState();\n    const [isSet,setIsSet] = useState(false)\n    // let data = require('./json/world_'+props.finalNumber+'.json');\n\n\n    \n      useEffect(()=>{\n        let data = import('./json/world_'+props.finalNumber+'.json');\n\n        data.then(d=>{\n            setDataJson(data);\n            setIsSet(true);\n\n        })\n      },[])\n\n    if(isSet){\n        return(\n            <>\n            <GeoJSON key='my-geojson' data={dataJson} />\n            </>\n        )\n    }\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,OAAR,QAAsB,eAAtB,C,CACA;;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;EAAA;;EAClC,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,EAAvC;EACA,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC,CAFkC,CAGlC;;EAIED,SAAS,CAAC,MAAI;IACZ,IAAIS,IAAI,GAAG,OAAO,kBAAgBL,KAAK,CAACM,WAAtB,GAAkC,OAAzC,CAAX;IAEAD,IAAI,CAACE,IAAL,CAAUC,CAAC,IAAE;MACTN,WAAW,CAACG,IAAD,CAAX;MACAD,QAAQ,CAAC,IAAD,CAAR;IAEH,CAJD;EAKD,CARQ,EAQP,EARO,CAAT;;EAUF,IAAGD,KAAH,EAAS;IACL,oBACI;MAAA,uBACA,QAAC,OAAD;QAA0B,IAAI,EAAEF;MAAhC,GAAa,YAAb;QAAA;QAAA;QAAA;MAAA;IADA,iBADJ;EAKH;AACJ;;GAxBuBF,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}