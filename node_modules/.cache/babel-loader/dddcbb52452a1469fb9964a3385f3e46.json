{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/CustomMarkerMainCity.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useMapEvents, useMap } from \"react-leaflet\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { icon } from '../Variable';\nimport MarkerInf from '../MarkerInf';\nimport AddPolygon from '../GeoJson/addPolygon';\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CustomMarkerMainCity(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [renderedThings, setRenderThings] = useState();\n  const [itemsRendered, setItemsRendered] = useState(0);\n  const [show, setShow] = useState(false);\n\n  const RecenterAutomatically = _ref => {\n    _s();\n\n    let {\n      lat,\n      lng\n    } = _ref;\n    const map = useMap();\n    useEffect(() => {\n      var zoom = Math.floor(Math.log2(Math.cos(lat * Math.PI / 180) * 2 * Math.PI * 6371008 * 4 / props.radius));\n      map.setZoom(zoom);\n      map.setView([lat, lng]);\n    }, [lat, lng]);\n    return null;\n  };\n\n  _s(RecenterAutomatically, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n    return [useMap];\n  });\n\n  useEffect(() => {\n    for (let i in props.things) {\n      setTimeout(() => {\n        setRenderThings(props.things[i]);\n        setShow(true);\n      }, 5000 * i);\n    }\n\n    $(\".leaflet-marker-pane :first-child\").hide();\n  }, [props]);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        icon: icon(renderedThings.data.img_name),\n        position: [renderedThings.data.lat, renderedThings.data.long_marker],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"description-name\",\n            href: renderedThings.data.wiki,\n            children: renderedThings.data.marker_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 112\n          }, this), renderedThings.data.text_wrap, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description-date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), \" \", dateFormater(renderedThings.data.date), \" \", renderedThings.data.bc_ad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, renderedThings.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MarkerInf, {\n        markerName: renderedThings.data.marker_name,\n        desc: renderedThings.data.text_wrap,\n        wiki: renderedThings.data.wiki,\n        date: dateFormater(renderedThings.data.date),\n        bc_ad: renderedThings.data.bc_ad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddPolygon, {\n        yearMarker: renderedThings.data.complateYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(RecenterAutomatically, {\n        lat: renderedThings.data.lat,\n        lng: renderedThings.data.long_marker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s2(CustomMarkerMainCity, \"wQ57osYuIeIkIgheoVAOn/tRh70=\");\n\n_c = CustomMarkerMainCity;\n\nfunction dateFormater(date) {\n  const words = date.split('/');\n  var mon = words[0];\n  var day = words[1];\n  var year = words[2];\n\n  if (mon = 1) {\n    mon = \"Jan\";\n  } else if (mon = '2') {\n    mon = \"Feb\";\n  } else if (mon = '3') {\n    mon = \"Mar\";\n  } else if (mon = '4') {\n    mon = \"Apr\";\n  } else if (mon = '5') {\n    mon = \"May\";\n  } else if (mon = '6') {\n    mon = \"Jun\";\n  } else if (mon = '7') {\n    mon = \"Jul\";\n  } else if (mon = '8') {\n    mon = \"Avg\";\n  } else if (mon = '9') {\n    mon = \"Sep\";\n  } else if (mon = '10') {\n    mon = \"Oct\";\n  } else if (mon = '11') {\n    mon = \"Nov\";\n  } else if (mon = '12') {\n    mon = \"Dec\";\n  }\n\n  return mon + \" \" + day + \" \" + year;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomMarkerMainCity\");","map":{"version":3,"names":["React","useEffect","useState","useMapEvents","useMap","Marker","Popup","icon","MarkerInf","AddPolygon","$","CustomMarkerMainCity","props","renderedThings","setRenderThings","itemsRendered","setItemsRendered","show","setShow","RecenterAutomatically","lat","lng","map","zoom","Math","floor","log2","cos","PI","radius","setZoom","setView","i","things","setTimeout","hide","data","img_name","long_marker","wiki","marker_name","text_wrap","dateFormater","date","bc_ad","key","complateYear","words","split","mon","day","year"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/Marker/CustomMarkerMainCity.js"],"sourcesContent":["import React , { useEffect, useState} from 'react';\nimport {useMapEvents,useMap} from \"react-leaflet\"\nimport {Marker,Popup} from 'react-leaflet'\nimport { icon } from '../Variable';\nimport MarkerInf from '../MarkerInf';\nimport AddPolygon from '../GeoJson/addPolygon';\nimport $ from \"jquery\"\n\nexport default function CustomMarkerMainCity(props){\n  const [renderedThings, setRenderThings] = useState();\n  const [itemsRendered , setItemsRendered] = useState(0);\n  const [show, setShow] = useState(false);\n  \n\n  const RecenterAutomatically = ({lat,lng}) => {\n    const map = useMap();\n     useEffect(() => {\n      var zoom = Math.floor(Math.log2((Math.cos(lat * Math.PI/180) * 2 * Math.PI * 6371008 * 4)/props.radius))\n       map.setZoom(zoom);\n       map.setView([lat, lng]);\n     }, [lat, lng]);\n     return null;\n   }\n\n  useEffect(() => {\n\n    for (let i in props.things) {\n      setTimeout(() => {\n        setRenderThings(props.things[i]);\n        setShow(true);\n        \n      }, 5000 * i);\n    }\n    \n    $(\".leaflet-marker-pane :first-child\").hide();\n  }, [props]);\n\n  if(show){\n    \n    return(\n      <>\n      <Marker key={renderedThings.key} icon={icon(renderedThings.data.img_name)} position={[renderedThings.data.lat,renderedThings.data.long_marker]}>\n        <Popup>\n          <a className='description-name' href={renderedThings.data.wiki}>{renderedThings.data.marker_name}</a><br></br>\n          {renderedThings.data.text_wrap}<br></br>\n          <span className='description-date'>Date:</span> {dateFormater(renderedThings.data.date)} {renderedThings.data.bc_ad}\n        </Popup>\n      </Marker>\n      <MarkerInf markerName={renderedThings.data.marker_name} desc= {renderedThings.data.text_wrap} wiki={renderedThings.data.wiki} date ={dateFormater(renderedThings.data.date)} bc_ad = {renderedThings.data.bc_ad}></MarkerInf>\n      <AddPolygon yearMarker = {renderedThings.data.complateYear}></AddPolygon>\n      <RecenterAutomatically  lat={renderedThings.data.lat} lng={renderedThings.data.long_marker}></RecenterAutomatically>\n      </>\n\n  )\n  }\n  \n}\n\nfunction dateFormater(date){\n  const words = date.split('/');\n  var mon=words[0]\n  var day=words[1]\n  var year=words[2]\n\n  if(mon = 1){\n    mon = \"Jan\"\n  }else if (mon = '2'){\n    mon = \"Feb\"\n  }else if (mon = '3'){\n    mon = \"Mar\"\n  }else if (mon = '4'){\n    mon = \"Apr\"\n  }else if (mon = '5'){\n    mon = \"May\"\n  }else if (mon = '6'){\n    mon = \"Jun\"\n  }else if (mon = '7'){\n    mon = \"Jul\"\n  }else if (mon = '8'){\n    mon = \"Avg\"\n  }else if (mon = '9'){\n    mon = \"Sep\"\n  }else if (mon = '10'){\n    mon = \"Oct\"\n  }else if (mon = '11'){\n    mon = \"Nov\"\n  }else if (mon = '12'){\n    mon=\"Dec\"\n  }\n  return mon+\" \"+day + \" \" +year\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}