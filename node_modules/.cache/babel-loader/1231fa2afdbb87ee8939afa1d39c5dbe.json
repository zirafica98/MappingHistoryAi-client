{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GeoJSON } from 'react-leaflet'; //import geoJson from './json/world_-500.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapPoly(props) {\n  _s();\n\n  const [dataJson, setDataJson] = useState();\n  const [isSet, setIsSet] = useState(false);\n  const [setYear, isSetYear] = useState(props.finalNumber); // let data = require('./json/world_'+props.finalNumber+'.json');\n\n  const fetchData = () => {\n    let data = import('./json/world_' + props.finalNumber + '.json');\n    data.then(d => {\n      setDataJson(d);\n      setIsSet(true);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [dataJson]);\n\n  if (isSet) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: dataJson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(MapPoly, \"3END9TGbkQzon3kOrztocjqlvio=\");\n\n_c = MapPoly;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPoly\");","map":{"version":3,"names":["useEffect","useState","GeoJSON","MapPoly","props","dataJson","setDataJson","isSet","setIsSet","setYear","isSetYear","finalNumber","fetchData","data","then","d"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {GeoJSON} from 'react-leaflet'\n//import geoJson from './json/world_-500.json';\nexport default function MapPoly(props){\n    const [dataJson,setDataJson] = useState();\n    const [isSet,setIsSet] = useState(false);\n    const[setYear,isSetYear] = useState(props.finalNumber);\n    // let data = require('./json/world_'+props.finalNumber+'.json');\n\n    \n    const fetchData = (()=>{\n        let data = import('./json/world_'+props.finalNumber+'.json');\n\n        data.then(d=>{\n            setDataJson(d);\n            setIsSet(true);\n        })\n    })\n    \n      useEffect(()=>{\n        fetchData();\n        \n      },[dataJson])\n\n    if(isSet){\n        return(\n            <>\n            <GeoJSON data={dataJson} />\n            </>\n        )\n    }\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,OAAR,QAAsB,eAAtB,C,CACA;;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;EAAA;;EAClC,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,EAAvC;EACA,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC;EACA,MAAK,CAACQ,OAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACG,KAAK,CAACO,WAAP,CAAnC,CAHkC,CAIlC;;EAGA,MAAMC,SAAS,GAAI,MAAI;IACnB,IAAIC,IAAI,GAAG,OAAO,kBAAgBT,KAAK,CAACO,WAAtB,GAAkC,OAAzC,CAAX;IAEAE,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAE;MACTT,WAAW,CAACS,CAAD,CAAX;MACAP,QAAQ,CAAC,IAAD,CAAR;IACH,CAHD;EAIH,CAPD;;EASER,SAAS,CAAC,MAAI;IACZY,SAAS;EAEV,CAHQ,EAGP,CAACP,QAAD,CAHO,CAAT;;EAKF,IAAGE,KAAH,EAAS;IACL,oBACI;MAAA,uBACA,QAAC,OAAD;QAAS,IAAI,EAAEF;MAAf;QAAA;QAAA;QAAA;MAAA;IADA,iBADJ;EAKH;AACJ;;GA5BuBF,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}