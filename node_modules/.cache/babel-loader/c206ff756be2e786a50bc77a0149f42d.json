{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GeoJSON } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapPoly(props) {\n  _s();\n\n  const [dataJson, setDataJson] = useState();\n  const [isSet, setIsSet] = useState(false);\n  const [key, setKey] = useState();\n\n  function style(features) {\n    return {\n      fillColor: features.properties.fill,\n      color: \"#000\",\n      weight: 0.5,\n      dashArray: '0',\n      opacity: 0.4,\n      fillOpacity: 0.4\n    };\n  }\n\n  useEffect(() => {\n    const fetchData = () => {\n      let data = import('./json/world_' + props.finalNumber + '.json');\n      data.then(d => {\n        setDataJson(d.features);\n        setIsSet(true);\n        setKey(0);\n        setKey(key + 1);\n      });\n    };\n\n    fetchData();\n  }, [props.finalNumber]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isSet && /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: dataJson,\n      style: style\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapPoly, \"IClWQxZX0uFcOkibnccDpkHy2O0=\");\n\n_c = MapPoly;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPoly\");","map":{"version":3,"names":["useEffect","useState","GeoJSON","MapPoly","props","dataJson","setDataJson","isSet","setIsSet","key","setKey","style","features","fillColor","properties","fill","color","weight","dashArray","opacity","fillOpacity","fetchData","data","finalNumber","then","d"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { GeoJSON } from \"react-leaflet\";\nexport default function MapPoly(props){\n    const [dataJson,setDataJson] = useState();\n    const [isSet,setIsSet] = useState(false);\n    const [key,setKey] = useState();\n    function style(features) {\n        return {\n         \n          fillColor: features.properties.fill,\n          color: \"#000\",\n          weight:0.5,\n          dashArray: '0',\n          opacity: 0.4,\n          fillOpacity: 0.4\n        };\n    }\n      useEffect(()=>{\n        const fetchData = (()=>{\n            let data = import('./json/world_'+props.finalNumber+'.json');\n            data.then(d=>{\n                setDataJson(d.features);\n                setIsSet(true);\n                setKey(0);\n                setKey(key+1);\n            })\n        })\n        fetchData();\n        \n      },[props.finalNumber])\n\n\n        return(\n            <>\n            {isSet && <GeoJSON key={key} data={dataJson} style ={style}/>}\n            </>\n        )\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,eAAxB;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;EAAA;;EAClC,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,EAAvC;EACA,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC;EACA,MAAM,CAACQ,GAAD,EAAKC,MAAL,IAAeT,QAAQ,EAA7B;;EACA,SAASU,KAAT,CAAeC,QAAf,EAAyB;IACrB,OAAO;MAELC,SAAS,EAAED,QAAQ,CAACE,UAAT,CAAoBC,IAF1B;MAGLC,KAAK,EAAE,MAHF;MAILC,MAAM,EAAC,GAJF;MAKLC,SAAS,EAAE,GALN;MAMLC,OAAO,EAAE,GANJ;MAOLC,WAAW,EAAE;IAPR,CAAP;EASH;;EACCpB,SAAS,CAAC,MAAI;IACZ,MAAMqB,SAAS,GAAI,MAAI;MACnB,IAAIC,IAAI,GAAG,OAAO,kBAAgBlB,KAAK,CAACmB,WAAtB,GAAkC,OAAzC,CAAX;MACAD,IAAI,CAACE,IAAL,CAAUC,CAAC,IAAE;QACTnB,WAAW,CAACmB,CAAC,CAACb,QAAH,CAAX;QACAJ,QAAQ,CAAC,IAAD,CAAR;QACAE,MAAM,CAAC,CAAD,CAAN;QACAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;MACH,CALD;IAMH,CARD;;IASAY,SAAS;EAEV,CAZQ,EAYP,CAACjB,KAAK,CAACmB,WAAP,CAZO,CAAT;EAeE,oBACI;IAAA,UACChB,KAAK,iBAAI,QAAC,OAAD;MAAmB,IAAI,EAAEF,QAAzB;MAAmC,KAAK,EAAGM;IAA3C,GAAcF,GAAd;MAAA;MAAA;MAAA;IAAA;EADV,iBADJ;AAKP;;GAnCuBN,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}