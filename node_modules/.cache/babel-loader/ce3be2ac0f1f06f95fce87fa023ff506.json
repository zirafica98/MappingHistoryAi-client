{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/ChatBot/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatBot() {\n  _s();\n\n  // const loader = (element) =>{\n  //     element.textContent = '';\n  //     let loadInterval;\n  //     loadInterval = setInterval(() => {\n  //       element.textContent+='.';\n  //       if(element.textContent === '....'){\n  //         element.textContent = '';\n  //       }\n  //     },300)\n  //   }\n  const typeText = (element, text) => {\n    let index = 0;\n    let interval = setInterval(() => {\n      if (index < text.length) {\n        element.innerHTML += text.charAt(index);\n        document.querySelector('#chat_container').scrollTop = document.querySelector('#chat_container').scrollHeight;\n        index++;\n      } else {\n        clearInterval(interval);\n      }\n    }, 10);\n  };\n\n  const generateUniqueId = () => {\n    const timestamp = Date.now();\n    const randomNumber = Math.random();\n    const hexadecimalString = randomNumber.toString(16);\n    return `id-${timestamp}-${hexadecimalString}`;\n  };\n\n  const chatStripe = (isAi, value, uniqueId) => {\n    return `\n            <div class=\"wraooer ${isAi && 'ai'}\">\n              <div class=\"chat\">\n                <div class = \"profile\">\n                  <img\n                    src=\"${isAi ? \"bot.svg\" : \"user.svg\"}\"\n                    alt=\"${isAi ? 'bot' : 'user'}\"\n                  />\n                </div>\n                <div class = \"message\" id=${uniqueId}>${value}</div>\n              </div>\n            </div>\n          `;\n  };\n\n  const handleSubmit = async e => {\n    // const form = document.querySelector('form');\n    const chatContainer = document.querySelector('#chat_container');\n    e.preventDefault();\n    const quest = document.getElementById(\"prompt\").value;\n    chatContainer.innerHTML += chatStripe(false, quest);\n    document.getElementById(\"prompt\").value = \"\";\n    const uniqueId = generateUniqueId();\n    chatContainer.innerHTML += chatStripe(true, \" \", uniqueId);\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n    const messageDiv = document.getElementById(uniqueId);\n    const respons = await fetch('http://localhost:5001/openAi', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: quest\n      })\n    });\n    messageDiv.innerHTML = \"\";\n\n    if (respons.ok) {\n      const data = await respons.json();\n      const parsedData = data.bot.trim();\n      typeText(messageDiv, parsedData);\n    } else {\n      const err = await respons.text();\n      messageDiv.innerHTML = \"Something went wrong\";\n      alert(err);\n    }\n  };\n\n  const openChat = () => {\n    if ($(\".chat-app\").hasClass(\"active\")) {\n      $(\".chat-app\").removeClass(\"active\");\n    } else {\n      $(\".chat-app\").addClass(\"active\");\n    }\n  };\n\n  useEffect(() => {\n    document.getElementById(\"prompt\").addEventListener('keyup', e => {\n      if (e.keyCode === 13) {\n        handleSubmit(e);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    className: \"chat-bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat_container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"prompt\",\n        id: \"prompt\",\n        rows: \"1\",\n        cols: \"1\",\n        placeholder: \"Ask....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"send.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"message-button\",\n      onClick: openChat,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"message2.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ChatBot, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ChatBot;\nexport default ChatBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","$","ChatBot","typeText","element","text","index","interval","setInterval","length","innerHTML","charAt","document","querySelector","scrollTop","scrollHeight","clearInterval","generateUniqueId","timestamp","Date","now","randomNumber","Math","random","hexadecimalString","toString","chatStripe","isAi","value","uniqueId","handleSubmit","e","chatContainer","preventDefault","quest","getElementById","messageDiv","respons","fetch","method","headers","body","JSON","stringify","prompt","ok","data","json","parsedData","bot","trim","err","alert","openChat","hasClass","removeClass","addClass","addEventListener","keyCode"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/ChatBot/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport $ from \"jquery\"\nfunction ChatBot() {\n\n    // const loader = (element) =>{\n    //     element.textContent = '';\n    //     let loadInterval;\n\n    //     loadInterval = setInterval(() => {\n    //       element.textContent+='.';\n      \n    //       if(element.textContent === '....'){\n    //         element.textContent = '';\n    //       }\n    //     },300)\n    //   }\n      \n      \n      const typeText = (element,text) =>{\n        let index = 0;\n      \n        let interval = setInterval(() => {\n          if(index < text.length){\n            element.innerHTML += text.charAt(index);\n            document.querySelector('#chat_container').scrollTop = document.querySelector('#chat_container').scrollHeight;\n            index++;\n          }else{\n            clearInterval(interval);\n          }\n        },10)\n      }\n      \n      const generateUniqueId = () =>{\n        const timestamp = Date.now();\n        const randomNumber = Math.random();\n        const hexadecimalString = randomNumber.toString(16);\n      \n        return `id-${timestamp}-${hexadecimalString}`;\n      }\n      \n      const chatStripe = (isAi,value,uniqueId) =>{\n        return(\n          `\n            <div class=\"wraooer ${isAi && 'ai'}\">\n              <div class=\"chat\">\n                <div class = \"profile\">\n                  <img\n                    src=\"${isAi ? \"bot.svg\" : \"user.svg\"}\"\n                    alt=\"${isAi? 'bot' : 'user'}\"\n                  />\n                </div>\n                <div class = \"message\" id=${uniqueId}>${value}</div>\n              </div>\n            </div>\n          `\n        )\n      }\n\n\n    const handleSubmit = async (e) =>{\n\n\n        \n\n        // const form = document.querySelector('form');\n        const chatContainer = document.querySelector('#chat_container');\n\n\n        e.preventDefault();\n        const quest = document.getElementById(\"prompt\").value;\n      \n        chatContainer.innerHTML+=chatStripe(false,quest);\n        document.getElementById(\"prompt\").value=\"\";\n\n      \n        const uniqueId = generateUniqueId();\n        chatContainer.innerHTML+=chatStripe(true,\" \",uniqueId);\n      \n        chatContainer.scrollTop = chatContainer.scrollHeight;\n      \n        const messageDiv = document.getElementById(uniqueId);\n      \n        const respons = await fetch('http://localhost:5001/openAi',{\n          method:'POST',\n          headers:{\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            prompt: quest\n          })\n        })\n        messageDiv.innerHTML = \"\";\n      \n        if(respons.ok){\n          const data = await respons.json();\n          const parsedData = data.bot.trim();\n      \n          typeText(messageDiv,parsedData);\n        }else{\n          const err = await respons.text();\n      \n          messageDiv.innerHTML = \"Something went wrong\";\n          alert(err);\n        }\n      }\n\n    const openChat = () =>{\n        if($(\".chat-app\").hasClass(\"active\")){\n            $(\".chat-app\").removeClass(\"active\");\n        }else{\n            $(\".chat-app\").addClass(\"active\");\n        }\n    }\n\n    useEffect(()=>{\n        document.getElementById(\"prompt\").addEventListener('keyup', (e)=>{\n            if(e.keyCode ===13){\n              handleSubmit(e);\n            }\n          })\n    }) \n\n    return (\n            <div id=\"app\" className='chat-bot'>\n                <div className='chat-app'>\n                    <div id=\"chat_container\"></div>\n                    <textarea name=\"prompt\" id=\"prompt\" rows=\"1\" cols=\"1\" placeholder=\"Ask....\"></textarea>\n                    <button type=\"submit\" onClick={handleSubmit}><img src=\"send.svg\"></img></button>\n                </div>\n                <button id='message-button' onClick={openChat}><img src='message2.png'></img></button>\n            </div>\n    );\n}\n\nexport default ChatBot;"],"mappings":"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"},"metadata":{},"sourceType":"module"}