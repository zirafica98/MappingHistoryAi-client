{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GeoJSON } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapPoly(props) {\n  _s();\n\n  const [dataJson, setDataJson] = useState();\n  const [isSet, setIsSet] = useState(false);\n\n  function style(features) {\n    return {\n      fillColor: features.properties.fill,\n      color: \"#000\",\n      weight: 0.5,\n      dashArray: '0',\n      opacity: 0.4,\n      fillOpacity: 0.4\n    };\n  }\n\n  const fetchData = () => {\n    let data = import('./json/world_' + props.finalNumber + '.json');\n    data.then(d => {\n      setDataJson(d.features);\n      setIsSet(true);\n    });\n  };\n\n  fetchData(); //   useEffect(()=>{\n  //   },[props.finalNumber])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isSet && /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: dataJson,\n      style: style\n    }, props.idPoly, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapPoly, \"UZAc7hDkZFYRDfKTL03qK5KGaRc=\");\n\n_c = MapPoly;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPoly\");","map":{"version":3,"names":["useEffect","useState","GeoJSON","MapPoly","props","dataJson","setDataJson","isSet","setIsSet","style","features","fillColor","properties","fill","color","weight","dashArray","opacity","fillOpacity","fetchData","data","finalNumber","then","d","idPoly"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/Markers-Nearby/src/GeoJson/mapPoly.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { GeoJSON } from \"react-leaflet\";\nexport default function MapPoly(props){\n    const [dataJson,setDataJson] = useState();\n    const [isSet,setIsSet] = useState(false);\n    function style(features) {\n        return {\n         \n          fillColor: features.properties.fill,\n          color: \"#000\",\n          weight:0.5,\n          dashArray: '0',\n          opacity: 0.4,\n          fillOpacity: 0.4\n        };\n    }\n\n    const fetchData = (()=>{\n        let data = import('./json/world_'+props.finalNumber+'.json');\n        data.then(d=>{\n            setDataJson(d.features);\n            setIsSet(true);\n        })\n    })\n    fetchData();\n\n    //   useEffect(()=>{\n        \n        \n    //   },[props.finalNumber])\n        return(\n            <>\n            {isSet && <GeoJSON key={props.idPoly} data={dataJson} style ={style}/>}\n            </>\n        )\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,eAAxB;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;EAAA;;EAClC,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,EAAvC;EACA,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC;;EACA,SAASQ,KAAT,CAAeC,QAAf,EAAyB;IACrB,OAAO;MAELC,SAAS,EAAED,QAAQ,CAACE,UAAT,CAAoBC,IAF1B;MAGLC,KAAK,EAAE,MAHF;MAILC,MAAM,EAAC,GAJF;MAKLC,SAAS,EAAE,GALN;MAMLC,OAAO,EAAE,GANJ;MAOLC,WAAW,EAAE;IAPR,CAAP;EASH;;EAED,MAAMC,SAAS,GAAI,MAAI;IACnB,IAAIC,IAAI,GAAG,OAAO,kBAAgBhB,KAAK,CAACiB,WAAtB,GAAkC,OAAzC,CAAX;IACAD,IAAI,CAACE,IAAL,CAAUC,CAAC,IAAE;MACTjB,WAAW,CAACiB,CAAC,CAACb,QAAH,CAAX;MACAF,QAAQ,CAAC,IAAD,CAAR;IACH,CAHD;EAIH,CAND;;EAOAW,SAAS,GAtByB,CAwBlC;EAGA;;EACI,oBACI;IAAA,UACCZ,KAAK,iBAAI,QAAC,OAAD;MAA4B,IAAI,EAAEF,QAAlC;MAA4C,KAAK,EAAGI;IAApD,GAAcL,KAAK,CAACoB,MAApB;MAAA;MAAA;MAAA;IAAA;EADV,iBADJ;AAKP;;GAjCuBrB,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}