{"ast":null,"code":"var _jsxFileName = \"/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/ChatBot/index.js\";\nimport React from 'react';\nimport $ from \"jquery\"; // import bot from 'bot.svg';\n// import user from './assets/user.svg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatBot() {\n  const handleClick = e => {\n    if ($(\".chat-app\").hasClass(\"active\")) {\n      $(\".chat-app\").removeClass(\"active\");\n    } else {\n      $(\".chat-app\").addClass(\"active\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(form);\n    chatContainer.innerHTML += chatStripe(false, data.get('prompt'));\n    form.reset();\n    const uniqueId = generateUniqueId();\n    chatContainer.innerHTML += chatStripe(true, \" \", uniqueId);\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n    const messageDiv = document.getElementById(uniqueId);\n    loader(messageDiv);\n    const respons = await fetch('http://localhost:5001/openAi', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: data.get('prompt')\n      })\n    });\n    clearInterval(loadInterval);\n    messageDiv.innerHTML = \"\";\n\n    if (respons.ok) {\n      const data = await respons.json();\n      const parsedData = data.bot.trim();\n      typeText(messageDiv, parsedData);\n    } else {\n      const err = await respons.text();\n      messageDiv.innerHTML = \"Something went wrong\";\n      alert(err);\n    }\n  }; //const form = document.getEle('form');\n\n\n  const chatContainer = document.querySelector('#chat_container');\n  let loadInterval;\n\n  function loader(element) {\n    element.textContent = '';\n    loadInterval = setInterval(() => {\n      element.textContent += '.';\n\n      if (element.textContent === '....') {\n        element.textContent = '';\n      }\n    }, 300);\n  }\n\n  function typeText(element, text) {\n    let index = 0;\n    let interval = setInterval(() => {\n      if (index < text.length) {\n        element.innerHTML += text.charAt(index);\n        index++;\n      } else {\n        clearInterval(interval);\n      }\n    }, 20);\n  }\n\n  function generateUniqueId() {\n    const timestamp = Date.now();\n    const randomNumber = Math.random();\n    const hexadecimalString = randomNumber.toString(16);\n    return `id-${timestamp}-${hexadecimalString}`;\n  }\n\n  function chatStripe(isAi, value, uniqueId) {\n    return `\n            <div class=\"wraooer ${isAi && 'ai'}\">\n              <div class=\"chat\">\n                <div class = \"profile\">\n                  <img\n                    src=\"${isAi ? \"bot.svg\" : \"user.svg\"}\"\n                    alt=\"${isAi ? 'bot' : 'user'}\"\n                  />\n                </div>\n                <div class = \"message\" id=${uniqueId}>${value}</div>\n              </div>\n            </div>\n          `;\n  }\n\n  document.getElementById(\"submitQues\").addEventListener('submit', handleSubmit);\n  document.getElementById(\"submitQues\").addEventListener('keyup', e => {\n    if (e.keyCode === 13) {\n      handleSubmit(e);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat_container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"prompt\",\n          rows: \"1\",\n          cols: \"1\",\n          placeholder: \"Ask....\",\n          id: \"prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submitQues\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"send.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"message-button\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"message2.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChatBot;\nexport default ChatBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","$","ChatBot","handleClick","e","hasClass","removeClass","addClass","handleSubmit","preventDefault","data","FormData","form","chatContainer","innerHTML","chatStripe","get","reset","uniqueId","generateUniqueId","scrollTop","scrollHeight","messageDiv","document","getElementById","loader","respons","fetch","method","headers","body","JSON","stringify","prompt","clearInterval","loadInterval","ok","json","parsedData","bot","trim","typeText","err","text","alert","querySelector","element","textContent","setInterval","index","interval","length","charAt","timestamp","Date","now","randomNumber","Math","random","hexadecimalString","toString","isAi","value","addEventListener","keyCode"],"sources":["/Users/mihajlopetrovic/Desktop/Posao/MappingHistory-AI/client-2/src/ChatBot/index.js"],"sourcesContent":["import React from 'react';\nimport $ from \"jquery\"\n\n// import bot from 'bot.svg';\n// import user from './assets/user.svg';\n\nfunction ChatBot() {\n\n    const handleClick = (e) => {\n        if($(\".chat-app\").hasClass(\"active\")){\n            $(\".chat-app\").removeClass(\"active\");\n        }else{\n            $(\".chat-app\").addClass(\"active\");\n        }\n      }\n      const handleSubmit = async (e) =>{\n        e.preventDefault();\n        const data = new FormData(form);\n      \n        chatContainer.innerHTML+=chatStripe(false,data.get('prompt'));\n        form.reset();\n      \n        const uniqueId = generateUniqueId();\n        chatContainer.innerHTML+=chatStripe(true,\" \",uniqueId);\n      \n        chatContainer.scrollTop = chatContainer.scrollHeight;\n      \n        const messageDiv = document.getElementById(uniqueId);\n        loader(messageDiv)\n      \n        const respons = await fetch('http://localhost:5001/openAi',{\n          method:'POST',\n          headers:{\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            prompt: data.get('prompt')\n          })\n        })\n      \n        clearInterval(loadInterval);\n        messageDiv.innerHTML = \"\";\n      \n        if(respons.ok){\n          const data = await respons.json();\n          const parsedData = data.bot.trim();\n      \n          typeText(messageDiv,parsedData);\n        }else{\n          const err = await respons.text();\n      \n          messageDiv.innerHTML = \"Something went wrong\";\n          alert(err);\n        }\n      }\n      //const form = document.getEle('form');\n      const chatContainer = document.querySelector('#chat_container');\n      \n      let loadInterval;\n      \n      function loader(element){\n        element.textContent = '';\n      \n        loadInterval = setInterval(() => {\n          element.textContent+='.';\n      \n          if(element.textContent === '....'){\n            element.textContent = '';\n          }\n        },300)\n      }\n      \n      \n      function typeText(element,text){\n        let index = 0;\n      \n        let interval = setInterval(() => {\n          if(index < text.length){\n            element.innerHTML += text.charAt(index);\n            index++;\n          }else{\n            clearInterval(interval);\n          }\n        },20)\n      }\n      \n      function generateUniqueId(){\n        const timestamp = Date.now();\n        const randomNumber = Math.random();\n        const hexadecimalString = randomNumber.toString(16);\n      \n        return `id-${timestamp}-${hexadecimalString}`;\n      }\n      \n      function chatStripe(isAi,value,uniqueId){\n        return(\n          `\n            <div class=\"wraooer ${isAi && 'ai'}\">\n              <div class=\"chat\">\n                <div class = \"profile\">\n                  <img\n                    src=\"${isAi ? \"bot.svg\" : \"user.svg\"}\"\n                    alt=\"${isAi? 'bot' : 'user'}\"\n                  />\n                </div>\n                <div class = \"message\" id=${uniqueId}>${value}</div>\n              </div>\n            </div>\n          `\n        )\n      }\n\n      document.getElementById(\"submitQues\").addEventListener('submit',handleSubmit);\n      document.getElementById(\"submitQues\").addEventListener('keyup', (e)=>{\n        if(e.keyCode ===13){\n          handleSubmit(e);\n        }\n      })\n\n    return (\n        <div className='chat-bot'>\n            <div className='chat-app'>\n                \n                <div id=\"chat_container\"></div>\n                <div className='form'>\n                    <textarea name=\"prompt\" rows=\"1\" cols=\"1\" placeholder=\"Ask....\" id=\"prompt\"></textarea>\n                    <button type=\"submit\" id=\"submitQues\">\n                        <img src='send.svg'></img>\n                    </button>\n                </div>\n            </div>\n            <button id='message-button' onClick={handleClick}><img src='message2.png'></img></button>\n        </div>\n    );\n}\n\nexport default ChatBot;"],"mappings":"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"},"metadata":{},"sourceType":"module"}